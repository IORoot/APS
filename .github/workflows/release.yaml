name: Create Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

  workflow_dispatch:


jobs:

  # release:
  #   runs-on: ${{ matrix.os }}

  #   strategy:
  #     matrix:
  #       os: [macos-latest]
  #       # os: [macos-latest, windows-latest]

  #   steps:
  #     - name: Check out Git repository
  #       uses: actions/checkout@v1

  #     - name: Install Node.js, NPM and Yarn
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 18

  #     - name: Build/release Electron app
  #       uses: samuelmeuli/action-electron-builder@v1
  #       with:
  #         # GitHub token, automatically provided to the action
  #         # (No need to define this secret in the repo settings)
  #         github_token: ${{ secrets.GITHUB_TOKEN }}

  #         # If the commit is tagged with a version (e.g. "v1.0.0"),
  #         # release the app after building
  #         release: true


  build:
    name: Create Release

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macOS-latest, windows-latest]

    steps:

      - name: Checkout code
        uses: actions/checkout@v2


      - name: Use Node.js 18.x
        uses: actions/setup-node@v1
        with:
          node-version: 18.x


      - name: npm install
        run: |
          npm install


      - name: Publish
        run: |
          npm run build


      - name: Cleanup artifacts
        if: matrix.os != 'windows-latest'
        run: |
          mkdir artifacts
          mv "dist/(*.exe,*.deb,*.AppImage,*.dmg)" artifacts || true


      - name: Cleanup artifacts Win
        if: matrix.os == 'windows-latest'
        run: |
          mkdir artifacts
          mv dist/*.exe artifacts


      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.os }}
          path: artifacts


      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: RELEASE.md
          draft: false
          prerelease: false



      - name: Upload artifact and release
        uses: nanoufo/action-upload-artifacts-and-release-assets@main
        with:
          path: |
            artifacts/*
          upload-release-files: true
          if-no-files-found: error
          release-upload-url: ${{ steps.create_release.outputs.upload_url }} 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}